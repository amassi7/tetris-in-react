{"ast":null,"code":"import _slicedToArray from \"/root/codebase/tetris-in-react/tetris/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/root/codebase/tetris-in-react/tetris/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { randomTetromino } from \"../utils/Tetrominoes\";\nvar buildPlayer = function buildPlayer(previous) {\n  var tetrominoes;\n  if (previous) {\n    tetrominoes = _toConsumableArray(previous.tetrominoes);\n    tetrominoes.unshift(randomTetromino());\n  } else {\n    tetrominoes = Array(5).fill(0).map(function (_) {\n      return randomTetromino();\n    });\n  }\n  return {\n    collided: false,\n    isFastDropping: false,\n    position: {\n      row: 0,\n      column: 4\n    },\n    tetrominoes: tetrominoes,\n    tetromino: tetrominoes.pop()\n  };\n};\nexport var usePlayer = function usePlayer() {\n  _s();\n  var _useState = useState(buildPlayer()),\n    _useState2 = _slicedToArray(_useState, 2),\n    player = _useState2[0],\n    setPlayer = _useState2[1];\n  var resetPlayer = useCallback(function () {\n    setPlayer(function (prev) {\n      return buildPlayer(prev);\n    });\n  }, []);\n  return [player, setPlayer, resetPlayer];\n};\n_s(usePlayer, \"yMbdYa5gMMBw4ggcjvLI47M20+0=\");","map":{"version":3,"names":["useState","useCallback","randomTetromino","buildPlayer","previous","tetrominoes","_toConsumableArray","unshift","Array","fill","map","_","collided","isFastDropping","position","row","column","tetromino","pop","usePlayer","_s","_useState","_useState2","_slicedToArray","player","setPlayer","resetPlayer","prev"],"sources":["/root/codebase/tetris-in-react/tetris/src/hooks/usePlayer.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nimport { randomTetromino } from \"../utils/Tetrominoes\";\r\n\r\nconst buildPlayer = (previous) => {\r\n  let tetrominoes;\r\n\r\n  if (previous) {\r\n    tetrominoes = [...previous.tetrominoes];\r\n    tetrominoes.unshift(randomTetromino());\r\n  } else {\r\n    tetrominoes = Array(5)\r\n      .fill(0)\r\n      .map((_) => randomTetromino());\r\n  }\r\n\r\n  return {\r\n    collided: false,\r\n    isFastDropping: false,\r\n    position: { row: 0, column: 4 },\r\n    tetrominoes,\r\n    tetromino: tetrominoes.pop()\r\n  };\r\n};\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState(buildPlayer());\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer((prev) => buildPlayer(prev));\r\n  }, []);\r\n\r\n  return [player, setPlayer, resetPlayer];\r\n};\r\n"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,SAASC,eAAe,QAAQ,sBAAsB;AAEtD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,QAAQ,EAAK;EAChC,IAAIC,WAAW;EAEf,IAAID,QAAQ,EAAE;IACZC,WAAW,GAAAC,kBAAA,CAAOF,QAAQ,CAACC,WAAW,CAAC;IACvCA,WAAW,CAACE,OAAO,CAACL,eAAe,CAAC,CAAC,CAAC;EACxC,CAAC,MAAM;IACLG,WAAW,GAAGG,KAAK,CAAC,CAAC,CAAC,CACnBC,IAAI,CAAC,CAAC,CAAC,CACPC,GAAG,CAAC,UAACC,CAAC;MAAA,OAAKT,eAAe,CAAC,CAAC;IAAA,EAAC;EAClC;EAEA,OAAO;IACLU,QAAQ,EAAE,KAAK;IACfC,cAAc,EAAE,KAAK;IACrBC,QAAQ,EAAE;MAAEC,GAAG,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IAC/BX,WAAW,EAAXA,WAAW;IACXY,SAAS,EAAEZ,WAAW,CAACa,GAAG,CAAC;EAC7B,CAAC;AACH,CAAC;AAED,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EAAAC,EAAA;EAC7B,IAAAC,SAAA,GAA4BrB,QAAQ,CAACG,WAAW,CAAC,CAAC,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,IAAMI,WAAW,GAAGzB,WAAW,CAAC,YAAM;IACpCwB,SAAS,CAAC,UAACE,IAAI;MAAA,OAAKxB,WAAW,CAACwB,IAAI,CAAC;IAAA,EAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACH,MAAM,EAAEC,SAAS,EAAEC,WAAW,CAAC;AACzC,CAAC;AAACN,EAAA,CARWD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
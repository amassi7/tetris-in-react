{"ast":null,"code":"import _slicedToArray from \"/root/codebase/tetris-in-react/tetris/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/root/codebase/tetris-in-react/tetris/src/components/Tetris.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport \"./Tetris.css\";\nimport Board from \"./Board\";\nimport GameStats from \"./GameStats\";\nimport Previews from \"./Previews\";\nimport GameController from \"./GameController\";\nimport { useBoard } from \"../hooks/useBoard\";\nimport { useGameStats } from \"../hooks/useGameStats\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Tetris = function Tetris(_ref) {\n  _s();\n  var rows = _ref.rows,\n    columns = _ref.columns,\n    setGameOver = _ref.setGameOver;\n  var _useGameStats = useGameStats(),\n    _useGameStats2 = _slicedToArray(_useGameStats, 2),\n    gameStats = _useGameStats2[0],\n    addLinesCleared = _useGameStats2[1];\n  var _usePlayer = usePlayer(),\n    _usePlayer2 = _slicedToArray(_usePlayer, 3),\n    player = _usePlayer2[0],\n    setPlayer = _usePlayer2[1],\n    resetPlayer = _usePlayer2[2];\n  var _useBoard = useBoard({\n      rows: rows,\n      columns: columns,\n      player: player,\n      resetPlayer: resetPlayer,\n      addLinesCleared: addLinesCleared\n    }),\n    _useBoard2 = _slicedToArray(_useBoard, 2),\n    board = _useBoard2[0],\n    setBoard = _useBoard2[1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tetris\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      board: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(GameStats, {\n      gameStats: gameStats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Previews, {\n      tetrominoes: player.tetrominoes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(GameController, {\n      board: board,\n      gameStats: gameStats,\n      player: player,\n      setGameOver: setGameOver,\n      setPlayer: setPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n_s(Tetris, \"IWMgEfw39VW2jJVLh0GCVcfeXx8=\", false, function () {\n  return [useGameStats, usePlayer, useBoard];\n});\n_c = Tetris;\nexport default Tetris;\nvar _c;\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"names":["Board","GameStats","Previews","GameController","useBoard","useGameStats","usePlayer","jsxDEV","_jsxDEV","Tetris","_ref","_s","rows","columns","setGameOver","_useGameStats","_useGameStats2","_slicedToArray","gameStats","addLinesCleared","_usePlayer","_usePlayer2","player","setPlayer","resetPlayer","_useBoard","_useBoard2","board","setBoard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","tetrominoes","_c","$RefreshReg$"],"sources":["/root/codebase/tetris-in-react/tetris/src/components/Tetris.js"],"sourcesContent":["import \"./Tetris.css\";\r\n\r\nimport Board from \"./Board\";\r\nimport GameStats from \"./GameStats\";\r\nimport Previews from \"./Previews\";\r\nimport GameController from \"./GameController\";\r\n\r\nimport { useBoard } from \"../hooks/useBoard\";\r\nimport { useGameStats } from \"../hooks/useGameStats\";\r\nimport { usePlayer } from \"../hooks/usePlayer\";\r\n\r\nconst Tetris = ({ rows, columns, setGameOver }) => {\r\n  const [gameStats, addLinesCleared] = useGameStats();\r\n  const [player, setPlayer, resetPlayer] = usePlayer();\r\n  const [board, setBoard] = useBoard({\r\n    rows,\r\n    columns,\r\n    player,\r\n    resetPlayer,\r\n    addLinesCleared\r\n  });\r\n\r\n  return (\r\n    <div className=\"Tetris\">\r\n      <Board board={board} />\r\n      <GameStats gameStats={gameStats} />\r\n      <Previews tetrominoes={player.tetrominoes} />\r\n      <GameController\r\n        board={board}\r\n        gameStats={gameStats}\r\n        player={player}\r\n        setGameOver={setGameOver}\r\n        setPlayer={setPlayer}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tetris;\r\n"],"mappings":";;;;AAAA,OAAO,cAAc;AAErB,OAAOA,KAAK,MAAM,SAAS;AAC3B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,SAAS,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAAuC;EAAAC,EAAA;EAAA,IAAjCC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEC,WAAW,GAAAJ,IAAA,CAAXI,WAAW;EAC1C,IAAAC,aAAA,GAAqCV,YAAY,CAAC,CAAC;IAAAW,cAAA,GAAAC,cAAA,CAAAF,aAAA;IAA5CG,SAAS,GAAAF,cAAA;IAAEG,eAAe,GAAAH,cAAA;EACjC,IAAAI,UAAA,GAAyCd,SAAS,CAAC,CAAC;IAAAe,WAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7CE,MAAM,GAAAD,WAAA;IAAEE,SAAS,GAAAF,WAAA;IAAEG,WAAW,GAAAH,WAAA;EACrC,IAAAI,SAAA,GAA0BrB,QAAQ,CAAC;MACjCQ,IAAI,EAAJA,IAAI;MACJC,OAAO,EAAPA,OAAO;MACPS,MAAM,EAANA,MAAM;MACNE,WAAW,EAAXA,WAAW;MACXL,eAAe,EAAfA;IACF,CAAC,CAAC;IAAAO,UAAA,GAAAT,cAAA,CAAAQ,SAAA;IANKE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAQtB,oBACElB,OAAA;IAAKqB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBtB,OAAA,CAACR,KAAK;MAAC2B,KAAK,EAAEA;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,eACvB3B,OAAA,CAACP,SAAS;MAACiB,SAAS,EAAEA;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,eACnC3B,OAAA,CAACN,QAAQ;MAACkC,WAAW,EAAEd,MAAM,CAACc;IAAY;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,eAC7C3B,OAAA,CAACL,cAAc;MACbwB,KAAK,EAAEA,KAAM;MACbT,SAAS,EAAEA,SAAU;MACrBI,MAAM,EAAEA,MAAO;MACfR,WAAW,EAAEA,WAAY;MACzBS,SAAS,EAAEA;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACtB,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CAzBIF,MAAM;EAAA,QAC2BJ,YAAY,EACRC,SAAS,EACxBF,QAAQ;AAAA;AAAAiC,EAAA,GAH9B5B,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
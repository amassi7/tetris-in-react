{"ast":null,"code":"var className = \"tetromino\";\nexport var TETROMINOES = {\n  I: {\n    shape: [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]],\n    className: \"\".concat(className, \" \").concat(className, \"__i\")\n  },\n  J: {\n    shape: [[0, 1, 0], [0, 1, 0], [1, 1, 0]],\n    className: \"\".concat(className, \" \").concat(className, \"__j\")\n  },\n  L: {\n    shape: [[0, 1, 0], [0, 1, 0], [0, 1, 1]],\n    className: \"\".concat(className, \" \").concat(className, \"__l\")\n  },\n  O: {\n    shape: [[1, 1], [1, 1]],\n    className: \"\".concat(className, \" \").concat(className, \"__o\")\n  },\n  S: {\n    shape: [[0, 1, 1], [1, 1, 0], [0, 0, 0]],\n    className: \"\".concat(className, \" \").concat(className, \"__s\")\n  },\n  T: {\n    shape: [[1, 1, 1], [0, 1, 0], [0, 0, 0]],\n    className: \"\".concat(className, \" \").concat(className, \"__t\")\n  },\n  Z: {\n    shape: [[1, 1, 0], [0, 1, 1], [0, 0, 0]],\n    className: \"\".concat(className, \" \").concat(className, \"__z\")\n  }\n};\nexport var randomTetromino = function randomTetromino() {\n  var keys = Object.keys(TETROMINOES);\n  var index = Math.floor(Math.random() * keys.length);\n  var key = keys[index];\n  return TETROMINOES[key];\n};\nexport var rotate = function rotate(_ref) {\n  var piece = _ref.piece,\n    direction = _ref.direction;\n  var newPiece = piece.map(function (_, index) {\n    return piece.map(function (column) {\n      return column[index];\n    });\n  });\n  if (direction > 0) return newPiece.map(function (row) {\n    return row.reverse();\n  });\n  return newPiece.reverse();\n};\nexport var transferToBoard = function transferToBoard(_ref2) {\n  var className = _ref2.className,\n    isOccupied = _ref2.isOccupied,\n    position = _ref2.position,\n    rows = _ref2.rows,\n    shape = _ref2.shape;\n  shape.forEach(function (row, y) {\n    row.forEach(function (cell, x) {\n      if (cell) {\n        var occupied = isOccupied;\n        var _y = y + position.row;\n        var _x = x + position.column;\n        rows[_y][_x] = {\n          occupied: occupied,\n          className: className\n        };\n      }\n    });\n  });\n  return rows;\n};","map":{"version":3,"names":["className","TETROMINOES","I","shape","concat","J","L","O","S","T","Z","randomTetromino","keys","Object","index","Math","floor","random","length","key","rotate","_ref","piece","direction","newPiece","map","_","column","row","reverse","transferToBoard","_ref2","isOccupied","position","rows","forEach","y","cell","x","occupied","_y","_x"],"sources":["/root/codebase/tetris-in-react/tetris/src/utils/Tetrominoes.js"],"sourcesContent":["const className = \"tetromino\";\r\n\r\nexport const TETROMINOES = {\r\n  I: {\r\n    shape: [\r\n      [0, 1, 0, 0],\r\n      [0, 1, 0, 0],\r\n      [0, 1, 0, 0],\r\n      [0, 1, 0, 0]\r\n    ],\r\n    className: `${className} ${className}__i`\r\n  },\r\n  J: {\r\n    shape: [\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [1, 1, 0]\r\n    ],\r\n    className: `${className} ${className}__j`\r\n  },\r\n  L: {\r\n    shape: [\r\n      [0, 1, 0],\r\n      [0, 1, 0],\r\n      [0, 1, 1]\r\n    ],\r\n    className: `${className} ${className}__l`\r\n  },\r\n  O: {\r\n    shape: [\r\n      [1, 1],\r\n      [1, 1]\r\n    ],\r\n    className: `${className} ${className}__o`\r\n  },\r\n  S: {\r\n    shape: [\r\n      [0, 1, 1],\r\n      [1, 1, 0],\r\n      [0, 0, 0]\r\n    ],\r\n    className: `${className} ${className}__s`\r\n  },\r\n  T: {\r\n    shape: [\r\n      [1, 1, 1],\r\n      [0, 1, 0],\r\n      [0, 0, 0]\r\n    ],\r\n    className: `${className} ${className}__t`\r\n  },\r\n  Z: {\r\n    shape: [\r\n      [1, 1, 0],\r\n      [0, 1, 1],\r\n      [0, 0, 0]\r\n    ],\r\n    className: `${className} ${className}__z`\r\n  }\r\n};\r\n\r\nexport const randomTetromino = () => {\r\n  const keys = Object.keys(TETROMINOES);\r\n  const index = Math.floor(Math.random() * keys.length);\r\n  const key = keys[index];\r\n  return TETROMINOES[key];\r\n};\r\n\r\nexport const rotate = ({ piece, direction }) => {\r\n  const newPiece = piece.map((_, index) =>\r\n    piece.map((column) => column[index])\r\n  );\r\n\r\n  if (direction > 0) return newPiece.map((row) => row.reverse());\r\n\r\n  return newPiece.reverse();\r\n};\r\n\r\nexport const transferToBoard = ({\r\n  className,\r\n  isOccupied,\r\n  position,\r\n  rows,\r\n  shape\r\n}) => {\r\n  shape.forEach((row, y) => {\r\n    row.forEach((cell, x) => {\r\n      if (cell) {\r\n        const occupied = isOccupied;\r\n        const _y = y + position.row;\r\n        const _x = x + position.column;\r\n        rows[_y][_x] = { occupied, className };\r\n      }\r\n    });\r\n  });\r\n\r\n  return rows;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}